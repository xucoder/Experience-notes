解决Everything up-todate问题

接下来先创建一个新分支提交改动

$ git branch newbranch
然后输入这条命令检查是否创建成功

$ git branch
这时终端输出

  newbranch
* master
这样就创建成功了，前面的*代表的是当前你所在的工作分支。我们接下来就要切换工作分支。

$ git checkout newbranch
这样就切换完了，可以 $ git branch 确认下。然后你要将你的改动提交到新的分支上。

$ git add .
$ git commit -a
此时可以 $ git status 检查下提交情况。如果提交成功，我们接下来就要回主分支了，代码和之前一样。

$ git checkout master
然后我们要将新分支提交的改动合并到主分支上

$ git merge newbranch
合并分支可能产生冲突这是正常的，虽然我们这是新建的分支不会产生冲突，但还是在这里记录下。下面的代码可以查看产生冲突的文件，然后做对应的修改再提交一次就可以了。

$ git diff
我们的问题就解决了，接下来就可以push代码了。

$ git push -u origin master
新建分支的朋友别忘了删除这个分支

$ git branch -D newbranch
如果想保留分支只是想删除已经合并的部分只要把大写的D改成小写的d就行了。